import org.panteleyev.jpackage.ImageType
import org.panteleyev.jpackage.JPackageTask

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'
    id 'signing'

    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'io.franzbecker.gradle-lombok' version '5.0.0'
    id 'org.javamodularity.moduleplugin' version '1.8.13'

    id 'org.panteleyev.jpackageplugin' version '1.6.1'

    // https://github.com/gradlex-org/java-module-dependencies
    id 'org.gradlex.java-module-dependencies' version '1.6.4'
}

project.version = '3.0.3'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation project(':lib')
}

mainModuleInfo {
    annotationProcessor 'lombok'
}

testModuleInfo {
    annotationProcessor 'lombok'
    requiresStatic 'org.junit.jupiter.api'
    requires 'org.junit.jupiter.engine'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    sourceCompatibility = JavaVersion.VERSION_23

    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

application {
    // Define the main class for the application.
    mainModule = 'password.manager.app'
    mainClass = 'password.manager.app.App'
}

javafx {
    version = '23.0.2'
    modules = [ 'javafx.base', 'javafx.controls', 'javafx.fxml', 'javafx.graphics', 'javafx.web' ]
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Password Manager', 'Main-Class': 'password.manager.app.App'
    }
    archiveBaseName.set(rootProject.name)
}

signing {
    sign jar
    sign distZip
    sign distTar
}

def resourceDir = layout.projectDirectory.dir('/src/main/resources')
def compileDir = rootProject.layout.projectDirectory.dir('/compiled')
def distDir = compileDir.dir('/distributions')
def installerDir = compileDir.dir('/installers')

tasks.register('copyDistTar', Copy) {
    dependsOn tasks.distTar, tasks.signDistTar
    from tasks.distTar, tasks.signDistTar
    into distDir.dir('/tar')
}

tasks.register('copyDistZip', Copy) {
    dependsOn tasks.distZip, tasks.signDistZip
    from tasks.distZip, tasks.signDistZip
    into distDir.dir('/zip')
}

tasks.register('copyDist', Delete) {
    delete distDir
    finalizedBy tasks.copyDistTar, tasks.copyDistZip
}


class FullJPackageTask extends JPackageTask {
    @Internal
    def osName = System.getProperty('os.name').toLowerCase()
    @Internal
    def isWindows = osName.contains('windows')
    @Internal
    def isMac = osName.contains('mac')
    @Internal
    def isLinux = osName.contains('nix') || osName.contains('nux') || osName.contains('aix')
    @Internal
    def isInCI =  System.getenv('CI') != null

    @TaskAction
    @Override
    void action() {
        List<ImageType> types
        if (isWindows) {
            types = [ImageType.EXE, ImageType.MSI]
        } else if (isMac) {
            types = [ImageType.DMG, ImageType.PKG]
        } else if (isLinux) {
            types = [ImageType.DEB, ImageType.RPM]
        } else {
            types = []
        }
        types.each { type ->
            setType(type)
            super.action()
        }
    }
}

tasks.jpackage {
    enabled = false
}

tasks.register('copyForPackaging', Copy) {
    dependsOn tasks.jar, tasks.signJar
    from configurations.runtimeClasspath, tasks.jar, tasks.signJar
    into layout.buildDirectory.dir('/jars')
}

// jpackage {
tasks.register('jpackageFull', FullJPackageTask) {
    dependsOn tasks.copyForPackaging

    aboutUrl = 'https://github.com/Achille004/PasswordManager'
    appDescription = 'Password Manager'
    appName = 'Password Manager'
    appVersion = project.version
    copyright = 'Â© Francesco Marras'
    icon =  resourceDir.file('/locker.ico')
    javaOptions = ['-Dfile.encoding=UTF-8']
    licenseFile	= resourceDir.file('/license.txt')
    module = 'password.manager.app/password.manager.app.App'
    modulePaths = ['/build/jars']
    resourceDir = resourceDir
    runtimeImage = System.getProperty('java.home')
    vendor = 'Francesco Marras'
    
    windows {
        destination = installerDir.dir('/windows')
        winConsole = false
        winDirChooser = true
        winHelpUrl = 'https://github.com/Achille004/PasswordManager'
        winMenu = true
        winMenuGroup = 'Francesco Marras'
        winShortcut = true
        winShortcutPrompt = true
    }

    mac {
        destination = installerDir.dir('/mac')
        macAppCategory  = 'security'
        macAppStore = false
        macPackageIdentifier = 'PasswordManager-3.0.3'
        macPackageName = 'PasswordManager'
        macSigningKeyUserName = 'Francesco Marras'
    }

    linux {
        destination = installerDir.dir('/linux')
        linuxAppCategory = 'security'
        linuxDebMaintainer = '2004marras@gmail.com'
        linuxMenuGroup = 'Francesco Marras'
        linuxRpmLicenseType = 'GPLv3'
        linuxShortcut = true
    }
}

tasks.register('dryJpackageFull') {
    System.setProperty("jpackage.dryRun", "true")
    finalizedBy tasks.jpackageFull
}